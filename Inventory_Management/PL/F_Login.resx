<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>